version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: banking_assistant
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_SCHEMA: banking_assistant
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/generate.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      # Database
      PGHOST: db
      PGDATABASE: banking_assistant
      PGUSER: postgres
      PGPASSWORD: postgres
      PGPORT: 5432
      DATABASE_SCHEMA: banking_assistant
      
      # Application
      ENVIRONMENT: development
      PORT: 8000
      
      # AI Service
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      
      # Optional Redis
      REDIS_URL: redis://redis:6379/0
      
    volumes:
      - ./app:/app/app
      - ./templates:/app/templates
      - ./static:/app/static
      - ./scripts:/app/scripts
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app/app
        - action: sync
          path: ./templates
          target: /app/templates
        - action: sync
          path: ./static
          target: /app/static
        - action: rebuild
          path: requirements.txt

  # Nginx (Optional - for production-like setup)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html/static:ro
    depends_on:
      - app
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: banking_assistant_network